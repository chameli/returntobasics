dependencyUpdates.resolutionStrategy = {
    componentSelection {
        rules ->
            rules.all {
                ComponentSelection selection ->
                    boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any {
                        qualifier -> selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                    }
                    if (rejected) {
                        selection.reject('Release candidate')
                    }
                    if (isProvidedArtifact(selection.candidate)) {
                        selection.reject('Provided artifact')
                    }
            }
    }
}

boolean isProvidedArtifact(ModuleComponentIdentifier candidate) {
    def groupAndModule = candidate.group + ':' + candidate.module
    def version = providedArtifacts.get(groupAndModule)
    return version != null && !candidate.version.equals(version)
}


